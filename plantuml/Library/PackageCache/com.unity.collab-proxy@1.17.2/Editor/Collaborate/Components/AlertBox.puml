@startuml
class AlertBox {
    + <<const>> UssClassName : string = "alert-box"
    + <<const>> IconUssClassName : string
    + <<const>> TextUssClassName : string
    + <<const>> ButtonUssClassName : string
    + AlertBox()
    + QueueAlert(id:string, level:AlertLevel, message:string, button:(string text, Action action)?) : void
    + DequeueAlert(id:string) : void
}
enum AlertLevel {
    Info,
    Warning,
    Alert,
}
class AlertEntry <<struct>> {
    + <<readonly>> Id : string
    + <<readonly>> Message : string
    + Button : AlertButton?
    + AlertEntry(id:string, level:AlertLevel, message:string, button:AlertButton?)
    + <<override>> GetHashCode() : int
    + <<override>> Equals(obj:object) : bool
    + CompareTo(other:AlertEntry) : int
}
class UxmlFactory <<new>> {
}
class "IComparable`1"<T> {
}
class AlertButton <<struct>> {
    + Text : string
}
class "UxmlFactory`1"<T> {
}
VisualElement <|-- AlertBox
AlertBox +-- AlertLevel
AlertBox +-- AlertEntry
"IComparable`1" "<AlertEntry>" <|-- AlertEntry
AlertEntry --> "Level" AlertLevel
AlertBox +-- UxmlFactory
"UxmlFactory`1" "<AlertBox>" <|-- UxmlFactory
AlertEntry +-- AlertButton
AlertButton --> "Action" Action
@enduml
